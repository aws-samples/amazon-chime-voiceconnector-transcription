plugins {
    id 'java'
    id 'com.bmuschko.docker-remote-api' version '6.4.0'
    id "io.freefair.lombok" version "5.0.1"
}

import com.bmuschko.gradle.docker.tasks.image.Dockerfile
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

archivesBaseName = 'amazon-chime-voiceconnector-recordandtranscribe'
repositories {
    mavenCentral()
}

dependencies {
    compile group: 'io.reactivex.rxjava2', name: 'rxjava', version: '2.2.2'
    compile(
            'software.amazon.awssdk:transcribestreaming:2.16.16',

            'com.amazonaws:aws-java-sdk-dynamodb:1.11.972',
            'com.amazonaws:aws-java-sdk-kinesisvideo:1.11.972',
            'com.amazonaws:aws-lambda-java-core:1.2.1',
            'com.amazonaws:aws-lambda-java-events:3.1.0',
            'com.amazonaws:aws-java-sdk-cloudwatch:1.11.972',
            'com.amazonaws:aws-java-sdk-apigatewaymanagementapi:1.11.972',
            'com.amazonaws:aws-java-sdk-ecs:1.11.972',
            'com.amazonaws:amazon-kinesis-video-streams-parser-library:1.0.15',
            'org.slf4j:slf4j-api:1.7.24',
            'org.slf4j:slf4j-log4j12:1.7.24',

            // need this for our async clients
            'software.amazon.awssdk:netty-nio-client:2.16.16',

            // need this for logging
            'org.apache.commons:commons-lang3:3.6',

            // need for argument parsing
            'commons-cli:commons-cli:1.4'
    )
}

task dockerJar(type: Jar) {
    manifest {
        attributes 'Main-Classs': 'com.amazonaws.kvstranscribestreaming.KVSTranscribeStreamingDocker'
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task copyJarAndNoticesToDocker(type: Copy) {
    from dockerJar, "$projectDir/NOTICES"
    into "$buildDir/docker"
}

task buildDockerFile(type: Dockerfile) {
    from("amazoncorretto:8")
    workingDir("/tmp/chime-streaming-transcribe/")
    addFile(archivesBaseName + ".jar", "./lib/")
    addFile("NOTICES", "./")
}

task buildDockerImage(type: DockerBuildImage) {
    dependsOn(copyJarAndNoticesToDocker, buildDockerFile)
    images.add('chime-transcribe:latest')
}

task buildZip(type: Zip) {
    from compileJava
    from processResources

    into('lib') {
        from configurations.compileClasspath
    }
}

task copyZipFile(type: Copy) {
    dependsOn tasks.named("buildZip")
    from "$buildDir/distributions/amazon-chime-voiceconnector-recordandtranscribe.zip"
    into "./infrastructure"
}

task copyCFTemplate(type: Copy){
    from "infrastructure/deployment-template.json"
    into "$buildDir/distributions"
}

task zipAndCopyRunTaskFunction(type: Zip){
    from "infrastructure/sendRunTaskRequestLambdaFunction.js"
    archiveFileName = "send-run-task-request-function.zip"
    destinationDirectory = file("$buildDir/distributions")
}

build.dependsOn buildZip, copyZipFile, copyCFTemplate, zipAndCopyRunTaskFunction, buildDockerFile
